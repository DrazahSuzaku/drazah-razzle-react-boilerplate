{"ast":null,"code":"// Removes leading and trailing whitespace or specified characters from string.\nimport * as moment from \"moment\";\nexport var trim = function trim(str) {\n  var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '\\\\s';\n  return str.replace(new RegExp(\"^([\".concat(c, \"]*)(.*?)([\").concat(c, \"]*)$\")), '$2');\n};\nexport var getDate = function getDate(date) {\n  return moment(date).format('DD-MM-YYYY');\n};\nexport var isAnArray = function isAnArray(array) {\n  return typeof array !== 'undefined' && Array.isArray(array);\n};\nexport var isArrayEmpty = function isArrayEmpty(array) {\n  return isAnArray(array) && array.length === 0;\n};\nexport var isNotUndefined = function isNotUndefined(data) {\n  return typeof data !== 'undefined';\n};\nexport var checkArray = function checkArray(data) {\n  return isNotUndefined(data) && !isArrayEmpty(data);\n}; // Exemple :\n// Generate numbers range 1..10 with step of 2 = range(1, 10, 2)\n\nexport var range = function range(start, stop, step) {\n  return Array.from({\n    length: (stop - start) / step + 1\n  }, function (_, i) {\n    return start + i * step;\n  });\n};","map":{"version":3,"sources":["I:/developpement/Js/seiryu/src/services/UtilService.js"],"names":["moment","trim","str","c","replace","RegExp","getDate","date","format","isAnArray","array","Array","isArray","isArrayEmpty","length","isNotUndefined","data","checkArray","range","start","stop","step","from","_","i"],"mappings":"AAAA;AACA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD;AAAA,MAAMC,CAAN,uEAAU,KAAV;AAAA,SAChBD,GAAG,CAACE,OAAJ,CAAY,IAAIC,MAAJ,cAAiBF,CAAjB,uBAA+BA,CAA/B,UAAZ,EAAqD,IAArD,CADgB;AAAA,CAAb;AAGP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC7B,SAAOP,MAAM,CAACO,IAAD,CAAN,CAAaC,MAAb,CAAoB,YAApB,CAAP;AACH,CAFM;AAIP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAChC,SAAO,OAAOA,KAAP,KAAiB,WAAjB,IAAgCC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAvC;AACH,CAFM;AAIP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACH,KAAD,EAAW;AACnC,SAAOD,SAAS,CAACC,KAAD,CAAT,IAAoBA,KAAK,CAACI,MAAN,KAAiB,CAA5C;AACH,CAFM;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AACpC,SAAQ,OAAOA,IAAP,KAAgB,WAAxB;AACH,CAFM;AAIP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,IAAD,EAAU;AAChC,SAAOD,cAAc,CAACC,IAAD,CAAd,IAAwB,CAACH,YAAY,CAACG,IAAD,CAA5C;AACH,CAFM,C,CAIP;AACA;;AACA,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd;AAAA,SAAuBV,KAAK,CAACW,IAAN,CAAW;AAAER,IAAAA,MAAM,EAAE,CAACM,IAAI,GAAGD,KAAR,IAAiBE,IAAjB,GAAwB;AAAlC,GAAX,EAAiD,UAACE,CAAD,EAAIC,CAAJ;AAAA,WAAUL,KAAK,GAAIK,CAAC,GAAGH,IAAvB;AAAA,GAAjD,CAAvB;AAAA,CAAd","sourcesContent":["// Removes leading and trailing whitespace or specified characters from string.\r\nimport * as moment from \"moment\";\r\n\r\nexport const trim = (str, c = '\\\\s') =>\r\n    str.replace(new RegExp(`^([${c}]*)(.*?)([${c}]*)$`), '$2');\r\n\r\nexport const getDate = (date) => {\r\n    return moment(date).format('DD-MM-YYYY');\r\n};\r\n\r\nexport const isAnArray = (array) => {\r\n    return typeof array !== 'undefined' && Array.isArray(array);\r\n};\r\n\r\nexport const isArrayEmpty = (array) => {\r\n    return isAnArray(array) && array.length === 0;\r\n};\r\n\r\nexport const isNotUndefined = (data) => {\r\n    return (typeof data !== 'undefined');\r\n};\r\n\r\nexport const checkArray = (data) => {\r\n    return isNotUndefined(data) && !isArrayEmpty(data)\r\n};\r\n\r\n// Exemple :\r\n// Generate numbers range 1..10 with step of 2 = range(1, 10, 2)\r\nexport const range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step));"]},"metadata":{},"sourceType":"module"}