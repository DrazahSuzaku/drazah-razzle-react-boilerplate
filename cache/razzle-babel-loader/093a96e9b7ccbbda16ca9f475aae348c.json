{"ast":null,"code":"import _regeneratorRuntime from \"I:/developpement/Js/seiryu/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"I:/developpement/Js/seiryu/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// CORE START\nimport axios from \"axios\";\nimport { ENTRYPOINT } from \"./config\";\nimport history from \"./history\";\nimport API from \"./httpClient\";\nimport { ROUTE_API_LOGIN_CHECK, ROUTE_API_REFRESH_TOKEN, ROUTE_SIGN_IN } from \"./routes\"; // CORE END\n\nvar instance = axios.create({\n  baseURL: ENTRYPOINT,\n  withCredentials: true,\n  responseType: 'json',\n  crossDomain: true\n});\ninstance.interceptors.response.use(function (response) {\n  return response;\n}, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(error) {\n    var originalRequest;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            originalRequest = error.config; // if (error.response.status !== 401) {\n            //     return new Promise((resolve, reject) => {\n            //         reject(error);\n            //     });\n            // }\n            //     if (error.response.status === 401 && originalRequest.url === ROUTE_API_REFRESH_TOKEN) {\n            //         console.log(\"redirection\");\n            //         router.push('/login');\n            //         return Promise.reject(error);\n            // }\n\n            if (!(originalRequest.url !== ROUTE_API_LOGIN_CHECK && originalRequest.url !== ROUTE_API_REFRESH_TOKEN)) {\n              _context.next = 8;\n              break;\n            }\n\n            console.log(originalRequest.url, ROUTE_API_LOGIN_CHECK);\n\n            if (!(error.response.status === 401 && !originalRequest._retry)) {\n              _context.next = 8;\n              break;\n            }\n\n            originalRequest._retry = true;\n            _context.next = 7;\n            return API.get(ROUTE_API_REFRESH_TOKEN).then(function (res) {\n              if (res.status === 204) {\n                return instance(originalRequest);\n              }\n            })[\"catch\"](function (error) {\n              history.push(ROUTE_SIGN_IN);\n            });\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default instance;","map":{"version":3,"sources":["I:/developpement/Js/seiryu/src/core/httpClient.js"],"names":["axios","ENTRYPOINT","history","API","ROUTE_API_LOGIN_CHECK","ROUTE_API_REFRESH_TOKEN","ROUTE_SIGN_IN","instance","create","baseURL","withCredentials","responseType","crossDomain","interceptors","response","use","error","originalRequest","config","url","console","log","status","_retry","get","then","res","push"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,UAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,qBAAR,EAA+BC,uBAA/B,EAAwDC,aAAxD,QAA4E,UAA5E,C,CACA;;AAEA,IAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAER,UADiB;AAE1BS,EAAAA,eAAe,EAAE,IAFS;AAG1BC,EAAAA,YAAY,EAAE,MAHY;AAI1BC,EAAAA,WAAW,EAAE;AAJa,CAAb,CAAjB;AAOAL,QAAQ,CAACM,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAmC,UAACD,QAAD,EAAc;AACzC,SAAOA,QAAP;AACH,CAFL;AAAA,sEAGI,iBAAgBE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,eADV,GAC4BD,KAAK,CAACE,MADlC,EAGI;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAbJ,kBAeOD,eAAe,CAACE,GAAhB,KAAwBf,qBAAxB,IAAiDa,eAAe,CAACE,GAAhB,KAAwBd,uBAfhF;AAAA;AAAA;AAAA;;AAiBQe,YAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAe,CAACE,GAA5B,EAAiCf,qBAAjC;;AAjBR,kBAkBYY,KAAK,CAACF,QAAN,CAAeQ,MAAf,KAA0B,GAA1B,IAAiC,CAACL,eAAe,CAACM,MAlB9D;AAAA;AAAA;AAAA;;AAoBYN,YAAAA,eAAe,CAACM,MAAhB,GAAyB,IAAzB;AApBZ;AAAA,mBAqByBpB,GAAG,CAACqB,GAAJ,CAAQnB,uBAAR,EACRoB,IADQ,CACH,UAAAC,GAAG,EAAI;AACT,kBAAIA,GAAG,CAACJ,MAAJ,KAAe,GAAnB,EAAwB;AACpB,uBAAOf,QAAQ,CAACU,eAAD,CAAf;AAEH;AACJ,aANQ,WAMA,UAAAD,KAAK,EAAI;AACdd,cAAAA,OAAO,CAACyB,IAAR,CAAarB,aAAb;AACH,aARQ,CArBzB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHJ;;AAAA;AAAA;AAAA;AAAA;AAqCA,eAAeC,QAAf","sourcesContent":["// CORE START\r\nimport axios from \"axios\";\r\nimport {ENTRYPOINT} from \"./config\";\r\nimport history from \"./history\";\r\nimport API from \"./httpClient\";\r\nimport {ROUTE_API_LOGIN_CHECK, ROUTE_API_REFRESH_TOKEN, ROUTE_SIGN_IN} from \"./routes\";\r\n// CORE END\r\n\r\nconst instance = axios.create({\r\n    baseURL: ENTRYPOINT,\r\n    withCredentials: true,\r\n    responseType: 'json',\r\n    crossDomain: true\r\n});\r\n\r\ninstance.interceptors.response.use((response) => {\r\n        return response\r\n    },\r\n    async function (error) {\r\n        const originalRequest = error.config;\r\n\r\n        // if (error.response.status !== 401) {\r\n        //     return new Promise((resolve, reject) => {\r\n        //         reject(error);\r\n        //     });\r\n        // }\r\n\r\n        //     if (error.response.status === 401 && originalRequest.url === ROUTE_API_REFRESH_TOKEN) {\r\n        //         console.log(\"redirection\");\r\n        //         router.push('/login');\r\n        //         return Promise.reject(error);\r\n        // }\r\n\r\n        if(originalRequest.url !== ROUTE_API_LOGIN_CHECK && originalRequest.url !== ROUTE_API_REFRESH_TOKEN\r\n        ) {\r\n            console.log(originalRequest.url, ROUTE_API_LOGIN_CHECK)\r\n            if (error.response.status === 401 && !originalRequest._retry) {\r\n\r\n                originalRequest._retry = true;\r\n                return await API.get(ROUTE_API_REFRESH_TOKEN)\r\n                    .then(res => {\r\n                        if (res.status === 204 ){\r\n                            return instance(originalRequest);\r\n\r\n                        }\r\n                    }).catch(error => {\r\n                        history.push(ROUTE_SIGN_IN);\r\n                    })\r\n            }\r\n        }\r\n    });\r\n\r\nexport default instance;"]},"metadata":{},"sourceType":"module"}